/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.raven.form;

import com.raven.dialog.Message;
import com.raven.dialog.Message1;
import com.raven.main.Main;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import view.*;
import javax.swing.table.DefaultTableModel;
import model.MauSacc;
import service.MauSaccService;

/**
 *
 * @author Dat
 */
public class MauSac extends javax.swing.JPanel {

    DefaultTableModel tblModel = new DefaultTableModel();
    private final MauSaccService mss = new MauSaccService();

    /**
     * Creates new form MauSacc
     */
    public MauSac() {
        initComponents();
        tblMauSacc.setModel(tblModel);
        String header[] = {
            "Mã màu sắc", "Tên màu sắc"
        };
        tblMauSacc.removeAll();
        tblModel.setColumnIdentifiers(header);
        tblModel = (DefaultTableModel) tblMauSacc.getModel();
        loadDataToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMaMauSac = new javax.swing.JTextField();
        txtTenMauSac = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMauSacc = new javax.swing.JTable();
        jTextField3 = new javax.swing.JTextField();
        lblcheckMaMauSac = new javax.swing.JLabel();
        lblcheckTenMauSac = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 204, 255));
        jLabel1.setText("Màu sắc");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Tên màu sắc");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Mã màu sắc");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        tblMauSacc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblMauSacc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMauSaccMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMauSacc);

        lblcheckMaMauSac.setText(" ");

        lblcheckTenMauSac.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(456, 456, 456))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(btnAdd)
                        .addGap(51, 51, 51)
                        .addComponent(btnUpdate)
                        .addGap(53, 53, 53)
                        .addComponent(btnDelete)
                        .addGap(53, 53, 53)
                        .addComponent(btnNew))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1020, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaMauSac)
                            .addComponent(txtTenMauSac, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                            .addComponent(lblcheckMaMauSac, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblcheckTenMauSac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(281, 281, 281)))))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnDelete, btnNew, btnUpdate});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMaMauSac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblcheckMaMauSac)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTenMauSac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblcheckTenMauSac)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnNew))
                .addGap(29, 29, 29)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdd, btnDelete, btnNew, btnUpdate});

    }// </editor-fold>//GEN-END:initComponents

    private void tblMauSaccMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMauSaccMouseClicked
        // TODO add your handling code here:
        try {
            showDetail();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tblMauSaccMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        try {
            String maMaMauSac = txtMaMauSac.getText();
//            if(check() ){
//                return false ;
//            }
//            if (txtMaMauSac.getText().equals("")) {
//                lblcheckMaMauSac.setText("Vui lòng nhập mã màu sắc");
//                lblcheckMaMauSac.setForeground(Color.red);
//                return;
//            } else if (txtTenMauSac.getText().equals("")) {
//                lblcheckTenMauSac.setText("Vui lòng nhập mã màu sắc");
//                lblcheckTenMauSac.setForeground(Color.red);
//                return;
//            }
//            if (checkTrung(maMaMauSac)) {
//                lblcheckMaMauSac.setText("Trùng mã");
//                lblcheckMaMauSac.setForeground(Color.red);
//                return;
//            }
            if (txtMaMauSac.getText().isEmpty()) {
                showMessage("Vui lòng nhập mã màu sắc");
                //JOptionPane.showMessageDialog(this, "Vui lòng nhập mã màu sắc");
                return;
            }
            if (txtTenMauSac.getText().isEmpty()) {
                showMessage("Vui lòng nhập tên màu sắc");
                //JOptionPane.showMessageDialog(this, "Vui lòng nhập tên màu sắc");
                return;
            }
            if (checkTrung(txtMaMauSac.getText())) {
                showMessage("Đã tồn tại mã màu sắc");
                //JOptionPane.showMessageDialog(this, "Đã tồn tại mã màu sắc");
                return;
            }
            MauSacc ms = getMauSacFormInput();
            if (mss.AddMauSacc(ms) != null) {
                showMessage("Thêm thành công");
                loadDataToTable();
                Reset();
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try {
//            if (txtMaMauSac.getText().equals("")) {
//                lblcheckMaMauSac.setText("Vui lòng nhập mã màu sắc");
//                lblcheckMaMauSac.setForeground(Color.red);
//                return;
//            }else{
//                lblcheckMaMauSac.setText(" ");
//            }
//             if (txtTenMauSac.getText().equals("")) {
//                lblcheckTenMauSac.setText("Vui lòng nhập màu sắc");
//                lblcheckTenMauSac.setForeground(Color.red);
//                return;
//            }
            //String maMauSac = txtMaMauSac.getText();
            if (txtMaMauSac.getText().isEmpty()) {
                showMessage("Vui lòng nhập mã màu sắc cần sửa");
                return;
            }
            if (txtTenMauSac.getText().isEmpty()) {
                showMessage("Vui lòng nhập tên màu sắc muốn thay đổi");
                return;
            }
            if (checkTrung(txtMaMauSac.getText())) {
                showMessage("Mã màu sắc cần sửa không tồn tại");
                return;
            }
            MauSacc ms = getMauSacFormInput();
            if (mss.UpdateMauSacc(ms) != null) {
                showMessage("Sửa thành công");
                Reset();
                loadDataToTable();
            }

        } catch (Exception e) {
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            String maMauSac = txtMaMauSac.getText();
//            if(check() ){
//                return false ;
//            }
//            if (txtMaMauSac.getText().equals("")) {
//                lblcheckMaMauSac.setText("Vui lòng nhập mã màu sắc");
//                lblcheckMaMauSac.setForeground(Color.red);
//                return;
//            } else if (txtTenMauSac.getText().equals("")) {
//                lblcheckTenMauSac.setText("Vui lòng nhập mã màu sắc");
//                lblcheckTenMauSac.setForeground(Color.red);
//                return;
//            }
//            else if (checkTrung(maMaMauSac)) {
//                lblcheckMaMauSac.setText("Trùng mã");
//                lblcheckMaMauSac.setForeground(Color.red);
//                return;
//            }

            if (txtMaMauSac.getText().isEmpty()) {
                showMessage("Vui lòng nhập mã màu sắc muốn xóa");
                return;
            }
//            if (txtTenMauSac.getText().isEmpty()) {
//                showMessage("Vui lòng nhập tên màu sắc muốn xóa");
//                return;
//            }
//            if (checkTrung(maMauSac)) {
//                showMessage("Mã màu sắc cần xóa không tồn tại");
//                return;
//            }
            MauSacc ms = getMauSacFormInput();
            String maMauSacxoa = txtMaMauSac.getText();
            int chon = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa hay không");
            if(chon != JOptionPane.YES_OPTION){
                return;
            }else {
                if (mss.DeleteMauSacc(txtMaMauSac.getText()) != null) {
                showMessage("Xóa thành công");
                Reset();
                loadDataToTable();
            }
            }
            

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        Reset();
    }//GEN-LAST:event_btnNewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel lblcheckMaMauSac;
    private javax.swing.JLabel lblcheckTenMauSac;
    private javax.swing.JTable tblMauSacc;
    private javax.swing.JTextField txtMaMauSac;
    private javax.swing.JTextField txtTenMauSac;
    // End of variables declaration//GEN-END:variables

    private void loadDataToTable() {
        ArrayList<MauSacc> list = mss.getAllMauSacc();
        tblModel.setRowCount(0);
        for (MauSacc ms : list) {
            tblModel.addRow(new Object[]{
                ms.getMaMauSac(),
                ms.getTenMauSac()
            });
        }
    }

    private void showDetail() {
        int index = tblMauSacc.getSelectedRow();
        txtMaMauSac.setText(tblModel.getValueAt(index, 0).toString());
        txtTenMauSac.setText(tblModel.getValueAt(index, 1).toString());
    }

    private MauSacc getMauSacFormInput() {
        MauSacc ms = new MauSacc();
        ms.setMaMauSac(txtMaMauSac.getText());
        ms.setTenMauSac(txtTenMauSac.getText());
        return ms;
    }

    private boolean checkTrung(String maMauSac) {
        for (int i = 0; i < tblMauSacc.getRowCount() - 1; i++) {
            if (tblMauSacc.getValueAt(i, 0).toString().equalsIgnoreCase(maMauSac)) {
                return true;
            }
        }
        return false;
    }
//    private boolean check(){
//        if(txtMaMauSac.getText().isEmpty()){
//            
//        }
//        return true;
//    }

    private void Reset() {
        txtMaMauSac.setText("");
        txtTenMauSac.setText("");
    }

//    private boolean check() {
//        if (txtMaMauSac.getText().equals("")) {
//            lblcheckMaMauSac.setText("Vui lòng nhập mã màu sắc");
//            lblcheckMaMauSac.setForeground(Color.red);
//            return false;
//        } else {
//            lblcheckMaMauSac.setText(null);
//            return true;
//        }
//    }
//
//    private boolean check1() {
//        if (txtTenMauSac.getText().equals("")) {
//            lblcheckTenMauSac.setText("Vui lòng nhập màu sắc");
//            lblcheckTenMauSac.setForeground(Color.red);
//            return false;
//        } else {
//            lblcheckTenMauSac.setText(null);
//            return true;
//        }
//    }

    private boolean showMessage(String message) {
        Message1 obj = new Message1(Main.getFrames()[0], true);
        obj.showMessage(message);
        return obj.isOk();
    }

    private boolean showMessage1(String message) {
        Message obj = new Message(Main.getFrames()[0], true);
        obj.showMessage(message);
        return obj.isOk();
    }
}
